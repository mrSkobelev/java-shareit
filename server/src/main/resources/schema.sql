DROP TABLE IF EXISTS
USERS,
ITEMS,
BOOKINGS,
REQUESTS,
COMMENTS;

CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
	item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(4000),
	owner_id BIGINT NOT NULL,
	available BOOLEAN,
	request_id BIGINT,
	CONSTRAINT items_pk PRIMARY KEY (item_id),
	CONSTRAINT items_users_fk FOREIGN KEY (owner_id) REFERENCES public.users(user_id),
	CONSTRAINT uq_owner_item_name UNIQUE(owner_id, name)
);

CREATE TABLE IF NOT EXISTS bookings (
booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
start_date_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
end_date_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
item_id BIGINT,
booker_id BIGINT,
status VARCHAR(24),
CONSTRAINT bookings_pk PRIMARY KEY (booking_id),
CONSTRAINT bookings_items_fk FOREIGN KEY (item_id) REFERENCES public.items(item_id),
CONSTRAINT bookings_users_fk FOREIGN KEY (booker_id) REFERENCES public.users(user_id)
);

CREATE TABLE IF NOT EXISTS requests (
request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
description VARCHAR(4000),
requester_id BIGINT,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT requests_pk PRIMARY KEY (request_id),
CONSTRAINT requests_users_fk FOREIGN KEY (requester_id) REFERENCES public.users(user_id)
);

CREATE TABLE IF NOT EXISTS comments (
comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
text VARCHAR(4000),
item_id BIGINT NOT NULL,
author_id BIGINT NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT comments_pk PRIMARY KEY (comment_id),
CONSTRAINT comments_items_fk FOREIGN KEY (item_id) REFERENCES public.items(item_id),
CONSTRAINT comments_users_fk FOREIGN KEY (author_id) REFERENCES public.users(user_id)
);